# Script PowerShell para Commit das Melhorias
Write-Host "==========================================" -ForegroundColor Green
Write-Host "Script para Commit das Melhorias" -ForegroundColor Green
Write-Host "==========================================" -ForegroundColor Green
Write-Host ""

try {
    Write-Host "1. Inicializando reposit√≥rio git (se necess√°rio)..." -ForegroundColor Yellow
    git init
    
    Write-Host ""
    Write-Host "2. Configurando remote para o reposit√≥rio GitHub..." -ForegroundColor Yellow
    git remote remove origin 2>$null
    git remote add origin https://github.com/SarahTomaz/Criaturas-Saltitantes.git
    
    Write-Host ""
    Write-Host "3. Criando branch para as melhorias..." -ForegroundColor Yellow
    git checkout -b feature/visualizacao-melhorada 2>$null
    
    Write-Host ""
    Write-Host "4. Adicionando arquivos ao staging..." -ForegroundColor Yellow
    git add .
    
    Write-Host ""
    Write-Host "5. Fazendo commit das altera√ß√µes..." -ForegroundColor Yellow
    $commitMessage = @"
feat: Implementa visualiza√ß√£o gr√°fica completa e controle de velocidade

‚ú® Novas Funcionalidades:
- Visualiza√ß√£o em tempo real de criaturas, clusters e guardi√£o
- Exibi√ß√£o visual das moedas para todos os elementos
- Controle de velocidade da simula√ß√£o (4 op√ß√µes: 100ms-1000ms)
- Interface com estat√≠sticas em tempo real
- Painel de configura√ß√µes expandido

üé® Melhorias Visuais:
- Sombras e contornos definidos para todos os elementos
- Fundo dourado destacado para moedas do guardi√£o
- Legendas explicativas dos s√≠mbolos
- Layout responsivo e intuitivo

‚ö° Performance:
- Acelera velocidade padr√£o de 1000ms para 300ms por itera√ß√£o
- Timer configur√°vel pelo usu√°rio
- Renderiza√ß√£o otimizada com antialiasing

üêõ Corre√ß√µes:
- Corrige l√≥gica de atualiza√ß√£o das moedas do guardi√£o
- Ajusta controles de interface durante execu√ß√£o
- Melhora responsividade dos elementos gr√°ficos

üìö Documenta√ß√£o:
- Adiciona documenta√ß√£o completa das funcionalidades
- Cria guias de uso e arquitetura
- Documenta condi√ß√µes de parada e velocidades

üß™ Testes:
- Mant√©m suite de testes completa (19 testes, 100% sucesso)
- Adiciona testes espec√≠ficos para o guardi√£o
- Valida todas as funcionalidades implementadas
"@
    
    git commit -m $commitMessage
    
    Write-Host ""
    Write-Host "6. Fazendo push para o GitHub..." -ForegroundColor Yellow
    git push -u origin feature/visualizacao-melhorada
    
    Write-Host ""
    Write-Host "==========================================" -ForegroundColor Green
    Write-Host "Commit realizado com sucesso!" -ForegroundColor Green
    Write-Host "Branch: feature/visualizacao-melhorada" -ForegroundColor Green
    Write-Host "==========================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "Pr√≥ximos passos:" -ForegroundColor Cyan
    Write-Host "1. Acesse: https://github.com/SarahTomaz/Criaturas-Saltitantes" -ForegroundColor White
    Write-Host "2. Crie um Pull Request da branch feature/visualizacao-melhorada para main" -ForegroundColor White
    Write-Host "3. Revise as altera√ß√µes e fa√ßa o merge" -ForegroundColor White
    Write-Host ""
    
    # Abrir automaticamente o GitHub no navegador
    Write-Host "Abrindo GitHub no navegador..." -ForegroundColor Yellow
    Start-Process "https://github.com/SarahTomaz/Criaturas-Saltitantes"
    
} catch {
    Write-Host "Erro durante o processo: $_" -ForegroundColor Red
    Write-Host "Verifique se o Git est√° instalado e configurado." -ForegroundColor Red
}

Write-Host ""
Read-Host "Pressione Enter para continuar"
